{{- if .Values.initJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "minio.fullname" . }}-init
spec:
  backoffLimit: 4
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: minio-init
        image: minio/mc:latest
        command:
          - /bin/sh
          - -c
          - |
            set -e
            echo "Waiting for MinIO to be ready..."
            until mc alias set myminio http://{{ include "minio.fullname" . }}:9000 {{ .Values.minio.accessKey }} {{ .Values.minio.secretKey }}; do
              echo "MinIO not ready, sleeping..."
              sleep 5
            done
        
            echo "Creating bucket {{ .Values.initJob.bucketName }}..."
            mc mb --ignore-existing myminio/{{ .Values.initJob.bucketName }}
        
            echo "Downloading file..."
            /usr/bin/curl -L -o /tmp/{{ .Values.initJob.fileName }} {{ .Values.initJob.fileUrl }}
        
            echo "Uploading to bucket..."
            mc cp /tmp/{{ .Values.initJob.fileName }} myminio/{{ .Values.initJob.bucketName }}/
        
            echo "Verifying file presence in MinIO..."
            for i in $(seq 1 5); do
              if mc ls myminio/{{ .Values.initJob.bucketName }}/{{ .Values.initJob.fileName }} >/dev/null 2>&1; then
                echo "File successfully verified in bucket."
                break
              else
                echo "Waiting for file to appear (attempt $i)..."
                sleep 2
              fi
            done
        
            if ! mc ls myminio/{{ .Values.initJob.bucketName }}/{{ .Values.initJob.fileName }} >/dev/null 2>&1; then
              echo "File not found after upload verification. Exiting with error."
              exit 1
            fi
        env:
          - name: MINIO_ROOT_USER
            value: {{ .Values.minio.accessKey }}
          - name: MINIO_ROOT_PASSWORD
            value: {{ .Values.minio.secretKey }}
{{- end }}
